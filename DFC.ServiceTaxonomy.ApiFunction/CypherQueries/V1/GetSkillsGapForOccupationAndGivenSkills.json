{
  "query": "MATCH (o:esco__Occupation ) <-[r:esco__isEssentialSkillFor|:esco__isOptionalSkillFor]- (s:esco__Skill ) where o.uri = $occupation WITH o, collect(s.uri ) as allSkills OPTIONAL MATCH (o:esco__Occupation) -- (jp:ncs__JobProfile) WITH o, jp.skos__prefLabel as jobProfileTitle,jp.uri as jobProfileUri,allSkills OPTIONAL MATCH(o:esco__Occupation ) <-[r:esco__isEssentialSkillFor|:esco__isOptionalSkillFor]- (sx:esco__Skill ) -[rst:esco__skillType]-(st:skos__Concept), (sx:esco__Skill )-[rrl:esco__skillReuseLevel]-(srl:skos__Concept) where sx.uri in $skillList WITH o, collect(sx.uri) as matchingSkills, collect({uri:sx.uri, skill:sx.skos__prefLabel, alternativeLabels:coalesce(sx.skos__altLabel,[]), type:case st.skos__prefLabel when 'skill' then 'competency' when 'knowledge' then 'knowledge' end, skillReusability:case srl.skos__prefLabel when 'cross-sector skills and competences' then 'cross-sectoral' when 'sector specific skills and competences' then 'sector-specific' when 'occupation specific skills and competences' then 'occupation-specific' when 'transversal skills and competences' then 'transversal' end, relationshipType:case type(r) when 'esco__isEssentialSkillFor' then 'essential' when 'esco__isOptionalSkillFor' then 'optional' end, lastModified:sx.dct__modified }) as matchingSkillDetails, allSkills,jobProfileTitle,jobProfileUri OPTIONAL MATCH(o:esco__Occupation ) <-[r:esco__isEssentialSkillFor|:esco__isOptionalSkillFor]- (sm:esco__Skill ) -[rst:esco__skillType]-(st:skos__Concept), (sm:esco__Skill )-[rrl:esco__skillReuseLevel]-(srl:skos__Concept) where not (sm.uri in matchingSkills) WITH o, collect({uri:sm.uri, skill:sm.skos__prefLabel, alternativeLabels:coalesce( sm.skos__altLabel,[]) , type:case st.skos__prefLabel when 'skill' then 'competency' when 'knowledge' then 'knowledge' end, skillReusability:case srl.skos__prefLabel when 'cross-sector skills and competences' then 'cross-sectoral' when 'sector specific skills and competences' then 'sector-specific' when 'occupation specific skills and competences' then 'occupation-specific' when 'transversal skills and competences' then 'transversal' end, relationshipType:case type(r) when 'esco__isEssentialSkillFor' then 'essential' when 'esco__isOptionalSkillFor' then 'optional' end, lastModified:sm.dct__modified }) as missingSkills, allSkills,jobProfileTitle,jobProfileUri,matchingSkills,matchingSkillDetails return { uri:o.uri, occupation:o.skos__prefLabel, jobProfileTitle:jobProfileTitle, jobProfileUri:jobProfileUri, alternativeLabels:coalesce(o.skos__altLabel,[]), lastModified:o.dct__modified, matchingSkills:case size(matchingSkills) when 0 then [] else matchingSkillDetails end, missingSkills:missingSkills } as results ",
  "queryParams": [
    {
      "name": "skillList",
      "type": "System.String[]"
    },
    {
      "name": "occupation",
      "type": "System.String"
    }
  ]
}