{
  "query": "MATCH (o:esco__Occupation ) <-[r:esco__isEssentialSkillFor|esco__isOptionalSkillFor]- (s:esco__Skill ) -[:skos__broader]->(d) where d.skos__notation starts with 'S' and o.uri = $occupation WITH o, collect({uri:d.uri, rel:type(r)} ) as allSkillDets WITH o, allSkillDets, [ x in allSkillDets WHERE x.rel ='esco__isEssentialSkillFor' ] as allEssentialSkills OPTIONAL MATCH(o:esco__Occupation ) <-[r:esco__isEssentialSkillFor|esco__isOptionalSkillFor]- (sx:esco__Skill ) -[:skos__broader]->(d) where d.skos__notation starts with 'S' and d.uri in $skillList WITH o, allEssentialSkills, collect(distinct d.uri) as matchingSkills, collect(distinct{uri:d.uri, skill:d.skos__prefLabel, alternativeLabels:coalesce(d.skos__altLabel,[]), type:'', skillReusability:'', relationshipType:case({uri:d.uri,rel:'esco__isEssentialSkillFor'} in allEssentialSkills) when true then 'essential' else 'optional' end, lastModified:datetime() }) as matchingSkillDetails OPTIONAL MATCH(o:esco__Occupation ) <-[r:esco__isEssentialSkillFor|esco__isOptionalSkillFor]- (sm:esco__Skill ) -[:skos__broader]->(dm) where dm.skos__notation starts with 'S' and not (dm.uri in matchingSkills) WITH o, allEssentialSkills, matchingSkills,matchingSkillDetails, collect(distinct dm.uri) as MissingSkillsUris, collect(distinct{uri:dm.uri, skill:dm.skos__prefLabel, alternativeLabels:coalesce( dm.skos__altLabel,[]), type:'', skillReusability:'', relationshipType:case({uri:dm.uri,rel:'esco__isEssentialSkillFor'} in allEssentialSkills) when true then 'essential' else 'optional' end, lastModified:datetime()}) as missingSkills return { uri:o.uri, occupation:o.skos__prefLabel, jobProfileTitle:o.skos__prefLabel, jobProfileUri:'', alternativeLabels:coalesce(o.skos__altLabel,[]), lastModified:o.dct__modified, matchingSkills:case size(matchingSkills) when 0 then [] else matchingSkillDetails end, missingSkills:missingSkills } as results ",
  "queryParams": [
    {
      "name": "skillList",
      "type": "System.String[]"
    },
    {
      "name": "occupation",
      "type": "System.String"
    }
  ]
}