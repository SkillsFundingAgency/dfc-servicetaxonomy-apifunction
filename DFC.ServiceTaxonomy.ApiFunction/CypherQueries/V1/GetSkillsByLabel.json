{
  "query": "with toLower($label) as lowerlabel\n match (ca:skos__Concept) <-[:skos__broader]- (s:esco__Skill) where ca.skos__notation starts with 'S'\n and ( toLower(ca.skos__prefLabel) contains lowerlabel or\n case toLower($matchaltlabels)\n   when 'true' then\n     toLower(s.skos__prefLabel) contains lowerlabel\n   else\n     false\n   end )\n with distinct ca as c, collect(s.skos__prefLabel) as skillLabels, lowerlabel\n with { skills:collect(\n {\n   uri:c.uri,\n   skill:c.skos__prefLabel,\n   skillType: 'unknown',\n   skillReusability: 'unknown',\n   alternativeLabels:[],\n   lastModified:'',\n   matches:\n   {\n     skill:[preflab in c.skos__prefLabel where toLower(preflab) contains lowerlabel],\n     alternativeLabels:coalesce([altlab in skillLabels where toLower(altlab) contains lowerlabel],[]),\n     hiddenLabels:[]\n   }\n }\n )} as skills \n return skills",
  "queryParams": [
    {
      "name": "label"
    },
    {
      "name": "matchaltlabels",
      "default": "false"
    }
  ]
}