{
  "query": "MATCH (s:esco__Skill)-[:skos__broader]->(d) WHERE s.uri in $skillList and exists(d.skos__notation) WITH s, d MATCH (d)<-[:skos__broader]-(c) where not exists (c.skos__notation) WITH collect(distinct d.uri) as bg2uri MATCH (la {esco__language:\"en\"})<-[:dct__description]-(o:esco__Occupation)-[:esco__isOptionalSkillFor|esco__isEssentialSkillFor]-(s2:esco__Skill)-[:skos__broader]-(bg2:skos__Concept) where bg2.uri in bg2uri and exists(bg2.skos__notation) WITH { NumberOfMatches : COUNT(distinct bg2), o:o, Description: la.skos__prefLabel } as occupationMatches WITH { Occupations: [val in collect(occupationMatches) where val.NumberOfMatches >= $minimumMatchingSkills ] } as filteredMatches UNWIND filteredMatches as mat1 UNWIND mat1.Occupations as mat2 RETURN { matchingOccupations: collect({uri:mat2.o.uri, occupation:mat2.o.skos__prefLabel, jobProfileTitle:mat2.o.skos__prefLabel, jobProfileUri:mat2.o.uri, jobProfileDescription:mat2.Description, matchingEssentialSkills:0, matchingOptionalSkills:0, socCode:9999, totalOccupationEssentialSkills:mat2.NumberOfMatches, totalOccupationOptionalSkills:0, lastModified:mat2.o.dct__modified})} as results",
  "queryParams": [
    {
      "name": "skillList",
      "type": "System.String[]"
    },
    {
      "name": "minimumMatchingSkills",
      "type": "System.Int32"
    }
  ]
}