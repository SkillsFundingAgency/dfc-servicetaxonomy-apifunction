{
  "query": "with toLower($label) as lowerlabel match (skillreuselevel)<-[:esco__skillReuseLevel]-(s:esco__Skill)-[:esco__skillType]->(skilltype) where toLower(head(s.skos__prefLabel)) contains lowerlabel or  case toLower($matchaltlabels)   when 'true' then     toLower(s.skos__compositeAltLabel) contains lowerlabel     or toLower(s.skos__compositeHiddenLabel) contains lowerlabel   else     false   end with { skills:collect( {   uri:s.uri,   skill:head(s.skos__prefLabel),   skillType: case head(skilltype.skos__prefLabel)     when 'skill' then 'competency'     when 'knowledge' then 'knowledge' end,   skillReusability: case head(skillreuselevel.skos__prefLabel)     when 'cross-sector skills and competences' then 'cross-sectoral'     when 'sector specific skills and competences' then 'sector-specific'     when 'occupation specific skills and competences' then 'occupation-specific'     when 'transversal skills and competences' then 'transversal' end,   alternativeLabels:coalesce(s.skos__altLabel,[]),   lastModified:head(s.dct__modified) } )} as skills  return skills",
  "queryParams": [
    {
      "name": "label"
    },
    {
      "name": "matchaltlabels",
      "default": "false"
    }
  ]
}
