{
  "query": "MATCH (jp:ncs__JobProfile{skos__prefLabel:$canonicalName})-[:ncs__hasSocCode]->(soc:ncs__SOCCode), (jp)-[:ncs__relatedOccupation]-(oc:esco__Occupation) OPTIONAL MATCH (dtd:ncs__DayToDayTask)<-[:ncs__hasDayToDayTask]-(jp) WITH jp,soc,oc,{tasks:collect(dtd.skos__prefLabel)} as dayToDayTasks OPTIONAL MATCH (jp)-[:ncs__hasWorkingUniform]-(wu:ncs__WorkingUniform) OPTIONAL MATCH (jp)-[:ncs__hasWorkingEnvironment]-(we:ncs__WorkingEnvironment) OPTIONAL MATCH (jp)-[:ncs__hasWorkingLocation]-(wl:ncs__WorkingLocation) OPTIONAL MATCH (jp)-[:ncs__requiresHtbRegistration]-(re:ncs__Registration) WITH wu,we,wl,jp,soc,oc,dayToDayTasks, {values:collect(re.ncs__Description), modifiedDate:max(re.ncs__ModifiedDate)} as registration OPTIONAL MATCH (jp)-[:ncs__hasHtbUniversityRoute]-(ur:ncs__UniversityRoute)-[:ncs__hasUniversityRequirement]-(urq:ncs__UniversityRequirement), (ur)-[:ncs__hasRequirementsPrefix]-(upr:ncs__RequirementsPrefix) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration, {values:collect(urq.ncs__Description), modifiedDate:max(urq.ncs__ModifiedDate)} as universityRequirement OPTIONAL MATCH (ur)-[:ncs__hasUniversityLink]-(ul:ncs__UniversityLink) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,{values:collect('[' + ul.skos__prefLabel + ' | ' + ul.uri + ']'), modifiedDate:max(ul.ncs__ModifiedDate)} as universityLinks OPTIONAL MATCH (jp)-[:ncs__hasHtbCollegeRoute]-(cr:ncs__CollegeRoute)-[:ncs__hasCollegeRequirement]-(crq:ncs__CollegeRequirement), (cr)-[:ncs__hasRequirementsPrefix]-(cpr:ncs__RequirementsPrefix) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,{values:collect(crq.ncs__Description), modifiedDate:max(crq.ncs__ModifiedDate)} as collegeRequirement OPTIONAL MATCH (cr)-[:ncs__hasCollegeLink]-(cl:ncs__CollegeLink) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,collegeRequirement,{values:collect('[' + cl.skos__prefLabel + ' | ' + cl.uri + ']'), modifiedDate:max(cl.ncs__ModifiedDate)} as collegeLinks OPTIONAL MATCH (jp)-[:ncs__hasHtbApprenticeshipRoute]-(ar:ncs__ApprenticeshipRoute)-[:ncs__hasApprenticeshipRequirement]-(arq:ncs__ApprenticeshipRequirement), (ar)-[:ncs__hasRequirementsPrefix]-(apr:ncs__RequirementsPrefix) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,collegeRequirement,collegeLinks,ar,apr,{values:collect(arq.ncs__Description), modifiedDate:max(arq.ncs__ModifiedDate)} as apprenticeshipRequirement OPTIONAL MATCH (ar)-[:ncs__hasCollegeLink]-(al:ncs__CollegeLink) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,collegeRequirement,collegeLinks,ar,apr,apprenticeshipRequirement,{values:collect('[' + al.skos__prefLabel + ' | ' + al.uri + ']'), modifiedDate:max(al.ncs__ModifiedDate)} as apprenticeshipLinks OPTIONAL MATCH (jp)-[:ncs__hasHtbWorkRoute]-(wr:ncs__WorkRoute) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,collegeRequirement,collegeLinks,ar,apr,apprenticeshipRequirement,apprenticeshipLinks,{values:collect(wr.ncs__Description), modifiedDate:max(wr.ncs__ModifiedDate)} as workRoute OPTIONAL MATCH (jp)-[:ncs__hasHtbVolunteeringRoute]-(vr:ncs__VolunteeringRoute) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,collegeRequirement,collegeLinks,ar,apr,apprenticeshipRequirement,apprenticeshipLinks,workRoute,{values:collect(vr.ncs__Description), modifiedDate:max(vr.ncs__ModifiedDate)} as volunteeringRoute OPTIONAL MATCH (jp)-[:ncs__hasHtbDirectRoute]-(dr:ncs__DirectRoute) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,collegeRequirement,collegeLinks,ar,apr,apprenticeshipRequirement,apprenticeshipLinks,workRoute,volunteeringRoute, {values:collect(dr.ncs__Description), modifiedDate:max(dr.ncs__ModifiedDate)} as directRoute OPTIONAL MATCH (jp)-[:ncs__hasHtbOtherRoute]-(or:ncs__OtherRoute) WITH wu,we,wl,jp,soc,oc,ur,upr,dayToDayTasks,registration,universityRequirement,universityLinks,cr,cpr,collegeRequirement,collegeLinks,ar,apr,apprenticeshipRequirement,apprenticeshipLinks,workRoute,volunteeringRoute,directRoute,{values:collect(or.ncs__Description),modifiedDate:max(or.ncs__ModifiedDate)} as otherRoute WITH wu,we,wl,jp,soc,oc, { lastModified:[jp.ncs__ModifiedDate, we.ncs__ModifiedDate, oc.ncs__ModifiedDate, wl.ncs__ModifiedDate, wu.ncs__ModifiedDate,ur.ncs__ModifiedDate,upr.ncs__ModifiedDate,universityLinks.ncs__ModifiedDate,universityRequirement.modifiedDate,collegeLinks.ncs__ModifiedDate,collegeRequirement.modifiedDate,apprenticeshipLinks.ncs__ModifiedDate,apprenticeshipRequirement.modifiedDate,workRoute.modifiedDate,volunteeringRoute.modifiedDate,directRoute.modifiedDate,otherRoute.modifiedDate,registration.modifiedDate], title: jp.skos__prefLabel, universityRoute:{ requirements:universityRequirement, requirementsPreface:upr.ncs__Description, relevantSubjects:ur.ncs__RelevantSubjects, furtherInfo:ur.ncs__FurtherInfo, links:universityLinks.values }, collegeRoute:{ requirements:collegeRequirement, requirementsPreface:cpr.ncs__Description, relevantSubjects:cr.ncs__RelevantSubjects, furtherInfo:cr.ncs__FurtherInfo, links:collegeLinks.values }, apprenticeshipRoute:{ requirements:apprenticeshipRequirement, requirementsPreface:apr.ncs__Description, relevantSubjects:ar.ncs__RelevantSubjects, furtherInfo:ar.ncs__FurtherInfo, links:apprenticeshipLinks.values }, workRoute:{ values:workRoute.values }, volunteeringRoute:{ values:volunteeringRoute.values }, directRoute:{ values:directRoute.values }, otherRoute:{ values:otherRoute.values }, dayToDayTasks:dayToDayTasks, registration:registration.values } as combinedProfiles UNWIND combinedProfiles.lastModified as lastModifiedDatesAsRows WITH wu, we, wl, jp, soc, oc, combinedProfiles, lastModifiedDatesAsRows RETURN { Title:combinedProfiles.title, LastUpdatedDate:MAX(lastModifiedDatesAsRows), Url:$host + '/getjobprofilebytitle/execute/' + jp.ncs__JobProfileWebsiteUrl, Soc:soc.skos__prefLabel, ONetOccupationalCode:'ToDo', AlternativeTitle:REDUCE(s = HEAD(oc.skos__altLabel), n IN TAIL( oc.skos__altLabel) | s + ', ' + n), Overview:jp.ncs__Description, SalaryStarter:jp.ncs__SalaryStarter, SalaryExperienced:jp.ncs__SalaryExperienced, MinimumHours:jp.ncs__MinimumHours, MaximumHours:jp.ncs__MaximumHours, WorkingHoursDetails:jp.ncs__WorkingHoursDetails, WorkingPattern:jp.ncs__WorkingPattern, WorkingPatternDetails:jp.ncs__WorkingPatternDetails, HowToBecome: { EntryRouteSummary:'ToDo', EntryRoutes: { University: { RelevantSubjects:combinedProfiles.universityRoute.relevantSubjects, FurtherInformation:combinedProfiles.universityRoute.furtherInfo, EntryRequirementPreface:combinedProfiles.universityRoute.requirementsPreface, EntryRequirements:combinedProfiles.universityRoute.requirements.values, AdditionalInformation:combinedProfiles.universityRoute.links }, College: { RelevantSubjects:combinedProfiles.collegeRoute.relevantSubjects, FurtherInformation:combinedProfiles.collegeRoute.furtherInfo, EntryRequirementPreface:combinedProfiles.collegeRoute.requirementsPreface, EntryRequirements:combinedProfiles.collegeRoute.requirements.values, AdditionalInformation:combinedProfiles.collegeRoute.links }, Apprenticeship: { RelevantSubjects:combinedProfiles.apprenticeshipRoute.relevantSubjects, FurtherInformation:combinedProfiles.apprenticeshipRoute.furtherInfo, EntryRequirementPreface:combinedProfiles.apprenticeshipRoute.requirementsPreface, EntryRequirements:combinedProfiles.apprenticeshipRoute.requirements.values, AdditionalInformation:combinedProfiles.apprenticeshipRoute.links }, Work:combinedProfiles.workRoute.values, Volunteering:combinedProfiles.volunteeringRoute.values, DirectApplication:combinedProfiles.directRoute.values, OtherRoutes:combinedProfiles.otherRoute.values }, MoreInformation: { Registration:combinedProfiles.registration, CareerTips:jp.ncs__HtbCareerTips, ProfessionalAndIndustryBodies:jp.ncs__HtbBodies, FurtherInformation:jp.ncs__HtbFurtherInformation } }, WhatItTakes: { DigitalSkillsLevel:jp.ncs__WitDigitalSkillsLevel, Skills:['ToDo'] }, WhatYouWillDo: { WYDDayToDayTasks:combinedProfiles.dayToDayTasks.tasks, WorkingEnvironment: { Location:COALESCE(wl.ncs__Description, ''), Environment:COALESCE(we.ncs__Description, ''), Uniform:COALESCE(wu.ncs__Description, '') } }, CareerPathAndProgression: { CareerPathAndProgression:[jp.ncs__CareerPathAndProgression] }, RelatedCareers:['ToDo'] }",
  "queryParams": [
    {
      "name": "canonicalName",
      "pathOrdinalPosition": 0
    }
  ]
}