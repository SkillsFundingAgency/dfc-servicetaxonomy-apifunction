{
  "query": "MATCH (soc:ncs__SOCCode)-[:ncs__hasSocCode]-(j:ncs__JobProfile)--(o:esco__Occupation )<-[r:esco__isEssentialSkillFor|:esco__isOptionalSkillFor]- (s:esco__Skill)-[rrl:esco__skillReuseLevel]-(srl:skos__Concept),(s)-[rst:esco__skillType]-(st:skos__Concept) WHERE s.uri in $skillList MATCH(jc:ncs__JobCategory)-[:ncs__hasJobProfile]-(j) WITH COLLECT({Uri:$websiteHost + jc.ncs__WebsiteURI, Name:jc.skos__prefLabel}) as JobCategories, soc, o, s, st, srl, rrl OPTIONAL MATCH (soc:ncs__SOCCode)-[:ncs__hasSocCode]-(j:ncs__JobProfile)--(o:esco__Occupation )<-[r:esco__isOptionalSkillFor]-(s:esco__Skill)-[rrl:esco__skillReuseLevel]-(srl:skos__Concept),(s)-[rst:esco__skillType]-(st:skos__Concept) WHERE s.uri in $skillList WITH soc, o, collect(distinct { uri:s.uri, skill:s.skos__prefLabel, alternativeLabels:s.skos__altLabel, type:case st.skos__prefLabel when 'skill' then 'competency' when 'knowledge' then 'knowledge' end, relationshipType:'optional', skillReusability:srl.skos__prefLabel, lastModified:s.dct__modified }) as MatchingOptionalSkills, JobCategories OPTIONAL MATCH (soc:ncs__SOCCode)-[:ncs__hasSocCode]-(j:ncs__JobProfile)--(o:esco__Occupation )<-[r:esco__isEssentialSkillFor]- (s:esco__Skill)-[rrl:esco__skillReuseLevel]-(srl:skos__Concept),(s)-[rst:esco__skillType]-(st:skos__Concept) WHERE s.uri in $skillList WITH soc, o, collect(distinct { uri:s.uri, skill:s.skos__prefLabel, alternativeLabels:s.skos__altLabel, type:case st.skos__prefLabel when 'skill' then 'competency' when 'knowledge' then 'knowledge' end, relationshipType:'essential', skillReusability:srl.skos__prefLabel, lastModified:s.dct__modified }) as MatchingEssentialSkills, MatchingOptionalSkills, JobCategories MATCH (j:ncs__JobProfile)--(o)<-[:esco__isEssentialSkillFor]-(sa)-[orrl:esco__skillReuseLevel]-(osrl:skos__Concept),(s)-[ocrst:esco__skillType]-(ost:skos__Concept) WHERE size(MatchingOptionalSkills) + size(MatchingEssentialSkills) >= $minimumMatchingSkills WITH soc, o, collect(distinct { uri:sa.uri, skill:sa.skos__prefLabel, alternativeLabels:sa.skos__altLabel, type:case ocrst.skos__prefLabel when 'skill' then 'competency' when 'knowledge' then 'knowledge' end, relationshipType:'essential', skillReusability:orrl.skos__prefLabel, lastModified:sa.dct__modified }) as AllEssentialSkills,MatchingEssentialSkills,MatchingOptionalSkills, JobCategories, j.skos__prefLabel as JobProfile, j.uri as JobProfileUri, j.ncs__Description as JobProfileDescription OPTIONAL MATCH (j:ncs__JobProfile)--(o)<-[:esco__isOptionalSkillFor]-(sa)-[orrl:esco__skillReuseLevel]-(osrl:skos__Concept),(s)-[ocrst:esco__skillType]-(ost:skos__Concept) WITH soc, o, collect(distinct { uri:sa.uri, skill:sa.skos__prefLabel, alternativeLabels:sa.skos__altLabel, type:case ocrst.skos__prefLabel when 'skill' then 'competency' when 'knowledge' then 'knowledge' end, relationshipType:'optional', skillReusability:orrl.skos__prefLabel, lastModified:sa.dct__modified }) as AllOptionalSkills, AllEssentialSkills, MatchingEssentialSkills, MatchingOptionalSkills, JobCategories, JobProfile, JobProfileUri, JobProfileDescription RETURN { matchingOccupations: collect({uri:o.uri, occupation:o.skos__prefLabel, jobProfileTitle:JobProfile, jobProfileUri:JobProfileUri, jobProfileDescription:JobProfileDescription, matchingEssentialSkills:MatchingEssentialSkills, matchingOptionalSkills:MatchingOptionalSkills, socCode:soc.skos__prefLabel, occupationEssentialSkills:AllEssentialSkills, occupationOptionalSkills:AllOptionalSkills, jobCategories:JobCategories, lastModified:o.dct__modified}) } as results",
  "queryParams": [
    {
      "name": "skillList",
      "type": "System.String[]"
    },
    {
      "name": "minimumMatchingSkills",
      "type": "System.Int32"
    }
  ]
}