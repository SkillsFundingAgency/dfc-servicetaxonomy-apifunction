{
  "query": "with toLower($label) as lowerlabel\nmatch (skillreuselevel)<-[:esco__skillReuseLevel]-(s:esco__Skill)-[:esco__skillType]->(skilltype)\nwhere toLower(head(s.skos__prefLabel)) contains lowerlabel or \ncase toLower($matchaltlabels)\n  when 'true' then\n    any(alt in s.skos__altLabel where toLower(alt) contains lowerlabel)\n    or any(hidden in s.skos__hiddenLabel where toLower(hidden) contains lowerlabel)\n  else\n    false\n  end\nwith { skills:collect(\n{\n  uri:s.uri,\n  skill:head(s.skos__prefLabel),\n  skillType: case head(skilltype.skos__prefLabel)\n    when 'skill' then 'competency'\n    when 'knowledge' then 'knowledge' end,\n  skillReusability: case head(skillreuselevel.skos__prefLabel)\n    when 'cross-sector skills and competences' then 'cross-sectoral'\n    when 'sector specific skills and competences' then 'sector-specific'\n    when 'occupation specific skills and competences' then 'occupation-specific'\n    when 'transversal skills and competences' then 'transversal' end,\n  alternativeLabels:coalesce(s.skos__altLabel,[]),\n  lastModified:head(s.dct__modified)\n}\n)} as skills \nreturn skills\n",
  "queryParams": [
    {
      "name": "label"
    },
    {
      "name": "matchaltlabels",
      "default": "false"
    }
  ]
}