{
  "query": "match (skillreuselevel)<-[esco__skillReuseLevel]-(s:esco__Skill)-[:esco__skillType]->(skilltype)\nwhere head(s.skos__prefLabel) contains $label or \ncase toLower($matchaltlabels)\n  when 'true' then\n    any(alt in s.skos__altLabel where alt contains $label)\n    or any(hidden in s.skos__hiddenLabel where hidden contains $label)\n  else\n    false\n  end\nwith { skills:collect(\n{\n  uri:s.uri,\n  skill:head(s.skos__prefLabel),\n  skillType: case head(skilltype.skos__prefLabel)\n    when 'skill' then 'competency'\n    when 'knowledge' then 'knowledge' end,\n  skillReusability: case head(skillreuselevel.skos__prefLabel)\n    when 'cross-sector skills and competences' then 'cross-sectoral'\n    when 'sector specific skills and competences' then 'sector-specific'\n    when 'occupation specific skills and competences' then 'occupation-specific'\n    when 'transversal skills and competences' then 'transversal' end,\n  alternativeLabels:coalesce(s.skos__altLabel,[]),\n  lastModified:head(s.dct__modified),\n  matches:\n  {\n    occupation:[preflab in s.skos__prefLabel where preflab contains $label],\n    alternativeLabels:coalesce([altlab in s.skos__altLabel where altlab contains $label],[]),\n    hiddenLabels:coalesce([hidlab in s.skos__hiddenLabel where hidlab contains $label],[])\n  }\n}\n)} as skills \nreturn skills\n",
  "queryParams": [
    {
      "name": "label"
    },
    {
      "name": "matchaltlabels",
      "default": "false"
    }
  ]
}