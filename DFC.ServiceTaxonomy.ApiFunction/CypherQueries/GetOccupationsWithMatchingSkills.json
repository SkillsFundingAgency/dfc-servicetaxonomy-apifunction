{
  "query": "MATCH (j:ncs_JobProfile) -- (o:escoOccupation ) <-[r:escoisEssentialSkillFor|:escoisOptionalSkillFor]- (s:escoSkill ) where s.uri in $skillList OPTIONAL MATCH (o)<-[:escoisEssentialSkillFor](sx) where sx.uri in $skillList WITH o, COUNT(distinct sx) as MatchingEssentialSkills OPTIONAL MATCH (o)<[:escoisOptionalSkillFor]-(sx) where sx.uri in $skillList WITH o, COUNT(distinct sx) as MatchingOptionalSkills,MatchingEssentialSkills MATCH (j:ncsJobProfile) -- (o)<-[:escoisEssentialSkillFor]-(sa) where MatchingOptionalSkills + MatchingEssentialSkills >= $minimumMatchingSkills WITH o, COUNT(distinct sa) as AllEssentialSkills,MatchingOptionalSkills,MatchingEssentialSkills, j.skosprefLabel as JobProfile, j.uri as JobProfileUri, j.ncsDescription as JobProfileDescription OPTIONAL MATCH (j:ncsJobProfile) -- (o)<-[:escoisOptionalSkillFor]-(sa) WITH o, COUNT(distinct sa) as AllOptionalSkills, AllEssentialSkills,MatchingOptionalSkills,MatchingEssentialSkills, JobProfile, JobProfileUri, JobProfileDescription return { matchingOccupations: collect({uri:o.uri,  occupation:head(o.skosprefLabel),  jobProfileTitle:JobProfile, jobProfileUri:JobProfileUri, jobProfileDescription:JobProfileDescription ,matchingEssentialSkills:MatchingEssentialSkills,  matchingOptionalSkills:MatchingOptionalSkills,  totalOccupationEssentialSkills:AllEssentialSkills,  totalOccupationOptionalSkills:AllOptionalSkills,lastModified:head(o.dct_modified)})} as results",
  "queryParams": [
    {
      "name": "skillList",
      "type": "System.String[]"
    },
    {
      "name": "minimumMatchingSkills",
      "type": "System.Int32"
    }
  ]
}