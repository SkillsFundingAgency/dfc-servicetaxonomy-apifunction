{
  "query": "MATCH (soc:ncs__SOCCode)-[:ncs__hasSocCode]-(j:ncs__JobProfile)--(o:esco__Occupation )<-[r:esco__isEssentialSkillFor|esco__isOptionalSkillFor]- (s:esco__Skill ) WHERE s.uri in $skillList OPTIONAL MATCH (o)<-[:esco__isEssentialSkillFor]-(sx) WHERE sx.uri in $skillList WITH soc, o, COUNT(distinct sx) as MatchingEssentialSkills OPTIONAL MATCH (o)<-[:esco__isOptionalSkillFor]-(sx) WHERE sx.uri in $skillList WITH soc, o, COUNT(distinct sx) as MatchingOptionalSkills, MatchingEssentialSkills MATCH (j:ncs__JobProfile) -- (o)<-[:esco__isEssentialSkillFor]-(sa) WHERE MatchingOptionalSkills + MatchingEssentialSkills >= $minimumMatchingSkills WITH o, COUNT(distinct sa) as AllEssentialSkills, soc, MatchingOptionalSkills,MatchingEssentialSkills, j.skos__prefLabel as JobProfile, j.uri as JobProfileUri, j.ncs__Description as JobProfileDescription OPTIONAL MATCH (j:ncs__JobProfile) -- (o)<-[:esco__isOptionalSkillFor]-(sa) WITH o, COUNT(distinct sa) as AllOptionalSkills, AllEssentialSkills, soc, MatchingOptionalSkills,MatchingEssentialSkills, JobProfile, JobProfileUri, JobProfileDescription RETURN { matchingOccupations: collect({uri:o.uri, occupation:o.skos__prefLabel, jobProfileTitle:JobProfile, jobProfileUri:JobProfileUri, jobProfileDescription:JobProfileDescription, matchingEssentialSkills:MatchingEssentialSkills, matchingOptionalSkills:MatchingOptionalSkills, socCode:soc.skos__prefLabel, totalOccupationEssentialSkills:AllEssentialSkills, totalOccupationOptionalSkills:AllOptionalSkills, lastModified:o.dct__modified})} as results",
  "queryParams": [
    {
      "name": "skillList",
      "type": "System.String[]"
    },
    {
      "name": "minimumMatchingSkills",
      "type": "System.Int32"
    }
  ]
}